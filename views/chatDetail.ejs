<!DOCTYPE html>
<html>
  <head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link href="/css/main.css" rel="stylesheet">
  </head>
  <body class = "grey-bg" onload = scrollDownAndFocus()>
    <%- include('nav.ejs') %>
    <div class="detail-bg" id="detail">
      <div class="chat-screen" id="chat-screen">
        <div class="chat-box enter">
          <span><%= result.member.invitor_username%>님이 <%= result.member.invitee_username%>님을 초대하셨습니다</span>
        </div>
        <% for (let i = 0; i < chatLogs.length; i++) { %>
          <% if (chatLogs[i].poster.equals(user._id)) { %>  <!--objectId끼리 비교는 ==가 아니라 objectId.equals(비교할objectId) 식으로해야 오브젝끼리 내용 비교가 가능하다-->
            <div class="chat-box mine"><span><%=chatLogs[i].text%> </span></div>
          <% } else { %>
            <div class="chat-box"><span><%=chatLogs[i].text%></span></div>
          <% } %>
        <% } %>
      </div>      
    </div>
    <div class="chat-placeholder">  </div>
    <div class="footer">
      <div class="chat-form">
        <input class="chat-input">
        <button class="btn btn-success">전송</button>
      </div>
    </div>    

    <!--웹소켓을 이용하기위한 코드, 특정html/ejs 파일마다 웹소켓을 이용하려면 아래 코드가 있어야함-->
    <script src="https://cdn.jsdelivr.net/npm/socket.io@4.7.2/client-dist/socket.io.min.js"></script>
    <script>
      const scrollingElement = (document.scrollingElement || document.body)
      const scrollToBottom = () => {
        scrollingElement.scrollTop = scrollingElement.scrollHeight
      }

      function scrollDownAndFocus() {
        scrollToBottom()
        document.querySelector('.chat-input').focus()
      }

      function inputFocus() {
        document.querySelector('.chat-input').focus()
      }
      const socket = io() //웹소켓 연결코드
      socket.emit('ask-join', '<%=result._id%>') //유저 -> 서버 데이터 전송, 서버에 ask-join 이름으로 클릭한 해당 채팅방에 join 신청
      document.querySelector('.btn-success').addEventListener('click',
        function() {  //.chat-button 버튼을 누를시, 1번방에 '반가워'를 보내는 요청을 서버에
          let text = document.querySelector('.chat-input').value
          if(text) {
            socket.emit('message-send', { msg: text, room: '<%=result._id%>', poster: '<%=user._id%>', posterUsername: '<%=user.username%>'})
            document.querySelector('.chat-input').value = ""
          }
        }
      )
      
      socket.on('message-broadcast', (data) => {
        document.querySelector('.chat-screen').insertAdjacentHTML('beforeend', 
          data.posterId == '<%=user._id%>'?`<div class="chat-box mine"><span>${data.msg}</span><span style="display:none">${data.posterId}</span></div>`:`<div class="chat-box"><span>${data.msg}</span><span style="display:none">${data.posterId}</span></div>`
        )   //``를 쓰면 안에 변수를 ${변수} 식으로 쉽게 쓸수있다
        scrollToBottom()
        inputFocus()
      }) //서버 -> 유저 데이터 수신시
    </script>
  </body>
</html>